<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.study.dao.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="com.study.model.UserInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="user_mail" property="userMail" jdbcType="VARCHAR" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="source" property="source" jdbcType="TINYINT" />
    <result column="gender" property="gender" jdbcType="TINYINT" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="nick" property="nick" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="id_card" property="idCard" jdbcType="VARCHAR" />
    <result column="domain" property="domain" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_name, password, mobile, user_mail, icon, source, gender, token, status, 
    create_time, name, nick, address,update_time,id_card,domain,parent_id,remark
  </sql>

  <select id="findLoad" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from user_info
    where 1=1
          and ( mobile = #{login,jdbcType=VARCHAR} or user_name= #{login,jdbcType=VARCHAR}  or user_mail= #{login,jdbcType=VARCHAR} or id_card= #{login,jdbcType=VARCHAR})
          and status!=2 and parent_id is null
  </select>

  <select id="findDomainLoad" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List" />
    from user_info
    where 1=1
          and ( mobile = #{login,jdbcType=VARCHAR} or user_name= #{login,jdbcType=VARCHAR}  or user_mail= #{login,jdbcType=VARCHAR} or id_card= #{login,jdbcType=VARCHAR})
          and domain=#{domain} and status!=2
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <select id="selectByMobile" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from user_info
    where mobile = #{mobile,jdbcType=VARCHAR} and status!=2 and parent_id is null
  </select>

  <select id="selectByDomainMobile" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List" />
    from user_info
    where mobile = #{mobile,jdbcType=VARCHAR} and domain=#{domain} and status!=2
  </select>

  <select id="countAllByDomain" resultType="java.lang.Integer" parameterType="java.lang.String">
    select
    count(1)
    from user_info
    where  domain=#{domain} and status!=2
  </select>

  <select id="countMonthByDomain" resultType="java.lang.Integer" parameterType="java.util.Map">
    select
    count(1)
    from user_info
    where  domain=#{domain} and status!=2
           and create_time >= str_to_date(#{date},'%Y-%m-%d')
  </select>


  <select id="selectByDomainUserName" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List" />
    from user_info
    where user_name = #{userName,jdbcType=VARCHAR} and domain=#{domain} and status!=2
  </select>

  <select id="findByEMail" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from user_info
    where user_mail = #{email,jdbcType=VARCHAR} and status!=2 and parent_id is null
  </select>

  <select id="findByIdCard" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from user_info
    where id_card = #{idCard,jdbcType=VARCHAR} and status!=2 and parent_id is null
  </select>

  <select id="findByUserName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from user_info
    where user_name = #{userName,jdbcType=VARCHAR} and status!=2 and parent_id is null
  </select>

  <select id="findByToken" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from user_info
    where token = #{token,jdbcType=VARCHAR} and status!=2
  </select>

  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.study.model.UserInfo" >
    insert into user_info (id, user_name, password, 
      mobile, user_mail, icon, 
      source, gender, token, 
      status, create_time, name, 
      nick, address,update_time,id_card,domain,parent_id)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{userMail,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, 
      #{source,jdbcType=TINYINT}, #{gender,jdbcType=TINYINT}, #{token,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, 
      #{nick,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},sysdate(), #{idCard,jdbcType=VARCHAR},#{domain,jdbcType=VARCHAR},#{parentId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.study.model.UserInfo" >
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="userMail != null" >
        user_mail,
      </if>
      <if test="icon != null" >
        icon,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="nick != null" >
        nick,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="idCard != null" >
        id_card,
      </if>
      <if test="domain != null" >
        domain,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="userMail != null" >
        #{userMail,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        #{source,jdbcType=TINYINT},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nick != null" >
        #{nick,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null" >
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="domain != null" >
        #{domain,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.study.model.UserInfo" >
    update user_info
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null and mobile!=''" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="userMail != null" >
        user_mail = #{userMail,jdbcType=VARCHAR},
      </if>
      <if test="icon != null and icon!=''" >
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=TINYINT},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null and name!=''" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nick != null and nick!=''" >
        nick = #{nick,jdbcType=VARCHAR},
      </if>
      <if test="address != null and address != ''" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null and idCard != ''" >
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="remark != null and remark != ''" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="domain != null and domain != ''" >
        domain = #{domain,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null " >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.study.model.UserInfo" >
    update user_info
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      user_mail = #{userMail,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      source = #{source,jdbcType=TINYINT},
      gender = #{gender,jdbcType=TINYINT},
      token = #{token,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      nick = #{nick,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updatePwd" parameterType="com.study.model.UserInfo" >
    update user_info
    set  password = #{password,jdbcType=VARCHAR},status=0
    where mobile = #{mobile,jdbcType=VARCHAR}
    <if test="domain != null and domain!=''" >
     and domain=#{domain}
    </if>
  </update>

  <update id="updateUserTime" parameterType="java.lang.Integer" >
    update user_info
    set  update_time=sysdate()
    where  id = #{userId,jdbcType=INTEGER}
  </update>

  <select id="findPageCount" resultType="java.lang.Integer" parameterType="userPageRequest" >
    select count(1)
    from user_info
    where  status!=2

    <if test="id!= null and id!=''" >
      and id =#{id}
    </if>
    <choose>
       <when test="type!=null and type==1">
         and source=0
       </when>
      <when test="type!=null and type==2">
         and source=1
      </when>
    </choose>
    <if test="username!= null" >
      and (user_name like "%"#{username}"%" or mobile like  "%"#{username}"%")
    </if>
    <if test="mobile!= null" >
      and( mobile like  "%"#{mobile}"%" or user_mail  like  "%"#{mobile}"%")
    </if>
    <choose>
      <when test="domain!= null">
        and domain=#{domain}
      </when>
     <otherwise>
       and parent_id is null
     </otherwise>
    </choose>
    <if test="startDate!=null and startDate!='' and endDate!=null and endDate!=''" >
      and create_time between str_to_date(concat(#{startDate}," 00:00:00"),'%Y-%m-%d %H:%i:%s')
                           and str_to_date(concat(#{endDate}," 23:59:59"),'%Y-%m-%d %H:%i:%s')
    </if>


  </select>

  <select id="findPage" resultType="userResponse" parameterType="userPageRequest" >
    select id as id,name as name,nick as nick,icon as icon,gender as gender,mobile as mobile,
          address as address,user_name as userName,create_time as ct,remark
    from user_info
    where   status!=2
    <if test="id!= null and id!=''" >
      and id =#{id}
    </if>
    <choose>
      <when test="type!=null and type==1">
        and source=0
      </when>
      <when test="type!=null and type==2">
        and source=1
      </when>
    </choose>
    <if test="username!= null" >
      and  (user_name like "%"#{username}"%" or mobile like  "%"#{username}"%")
    </if>
    <if test="mobile!= null" >
      and( mobile like  "%"#{mobile}"%" or user_mail  like  "%"#{mobile}"%")
    </if>
    <choose>
      <when test="domain!= null">
        and domain=#{domain}
      </when>
      <otherwise>
        and parent_id is null
      </otherwise>
    </choose>
    <if test="startDate!=null and startDate!='' and endDate!=null and endDate!=''" >
      and create_time between str_to_date(concat(#{startDate}," 00:00:00"),'%Y-%m-%d %H:%i:%s')
      and str_to_date(concat(#{endDate}," 23:59:59"),'%Y-%m-%d %H:%i:%s')
    </if>
    order by create_time desc

    limit #{start},#{size}
  </select>

</mapper>