<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.study.dao.UserSecurityMapper" >
  <resultMap id="BaseResultMap" type="com.study.model.UserSecurity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="pay_password" property="payPassword" jdbcType="VARCHAR" />
    <result column="identity_auth" property="identityAuth" jdbcType="BIT" />
    <result column="secret_question" property="secretQuestion" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, pay_password, identity_auth, secret_question, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_security
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from user_security
    where user_id = #{_parameter,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_security
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.study.model.UserSecurity" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_security (id, user_id, pay_password, 
      identity_auth, secret_question, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{payPassword,jdbcType=VARCHAR}, 
      #{identityAuth,jdbcType=BIT}, #{secretQuestion,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.study.model.UserSecurity" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_security
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      <if test="userId != null" >
        user_id,
      </if>
      <if test="payPassword != null" >
        pay_password,
      </if>
      <if test="identityAuth != null" >
        identity_auth,
      </if>
      <if test="secretQuestion != null" >
        secret_question,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=INTEGER},
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="payPassword != null" >
        #{payPassword,jdbcType=VARCHAR},
      </if>
      <if test="identityAuth != null" >
        #{identityAuth,jdbcType=BIT},
      </if>
      <if test="secretQuestion != null" >
        #{secretQuestion,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.study.model.UserSecurity" >
    update user_security
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="payPassword != null" >
        pay_password = #{payPassword,jdbcType=VARCHAR},
      </if>
      <if test="identityAuth != null" >
        identity_auth = #{identityAuth,jdbcType=BIT},
      </if>
      <if test="secretQuestion != null" >
        secret_question = #{secretQuestion,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.study.model.UserSecurity" >
    update user_security
    set user_id = #{userId,jdbcType=INTEGER},
      pay_password = #{payPassword,jdbcType=VARCHAR},
      identity_auth = #{identityAuth,jdbcType=BIT},
      secret_question = #{secretQuestion,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>